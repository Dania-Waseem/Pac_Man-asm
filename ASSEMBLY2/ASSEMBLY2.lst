Microsoft (R) Macro Assembler Version 14.42.34436.0	    05/12/25 01:24:51
CODE.asm						     Page 1 - 1


				; 23i-2622
				; DS A
				; COAL SEMESTER PROJECT 



				include irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 
				includelib winmm.lib  ; Windows multimedia library

				; the below are variables for sound (took help from internet to load sounds)

 = 00020000			SND_FILENAME      EQU 00020000h
 = 00000001			SND_ASYNC         EQU 00000001h
 = 00000000			SND_SYNC          EQU 00000000h
 = 00000000			NULL              EQU 0


				PlaySound PROTO STDCALL, 
				    pszSound:DWORD, 
				    hmod:DWORD, 
				    fdwSound:DWORD


 = 00000050			GAME_WIDTH = 80 
 = 0000005A			INFO_START = 90

 00000000			.data

 00000000 43 3A 5C 55 73	    midSound db "C:\Users\DELL\OneDrive\Desktop\game.wav",0
	   65 72 73 5C 44
	   45 4C 4C 5C 4F
	   6E 65 44 72 69
	   76 65 5C 44 65
	   73 6B 74 6F 70
	   5C 67 61 6D 65
	   2E 77 61 76 00
 00000028 43 3A 5C 55 73	    PacmanIntro db "C:\Users\DELL\OneDrive\Desktop\pacman_beginning.wav",0
	   65 72 73 5C 44
	   45 4C 4C 5C 4F
	   6E 65 44 72 69
	   76 65 5C 44 65
	   73 6B 74 6F 70
	   5C 70 61 63 6D
	   61 6E 5F 62 65
	   67 69 6E 6E 69
	   6E 67 2E 77 61
	   76 00

 0000005C 53 6F 75 6E 64	    SoundError db "Sound file not found or couldn't be played!",0
	   20 66 69 6C 65
	   20 6E 6F 74 20
	   66 6F 75 6E 64
	   20 6F 72 20 63
	   6F 75 6C 64 6E
	   27 74 20 62 65
	   20 70 6C 61 79
	   65 64 21 00
				    
 00000088 53 63 6F 72 65	    fileName  db "Scores.txt" 
	   73 2E 74 78 74
 00000092 45 6E 74 65 72		inputName db "Enter your name ... ",0
	   20 79 6F 75 72
	   20 6E 61 6D 65
	   20 2E 2E 2E 20
	   00
 000000A7  00000032 [		    username  db 50 dup(0)
	    00
	   ]

 000000D9 50 72 65 73 73	    returnMsg db 'Press 1 to return to main menu...', 0
	   20 31 20 74 6F
	   20 72 65 74 75
	   72 6E 20 74 6F
	   20 6D 61 69 6E
	   20 6D 65 6E 75
	   2E 2E 2E 00



 000000FB 23 23 23 23 23	    pmtitle1 db "#################################################################################",0
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 00
 0000014D 23 20 20 20 20	    pmtitle2 db "#                                                                               #",0
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   23 00
 0000019F 23 20 20 20 20	    pmtitle3 db "#      %%%%%%%%  %%%%%%%  %%%%%%%%     %%%%%   %%%%%  %%%%%%%%   %%      %      #",0
	   20 20 25 25 25
	   25 25 25 25 25
	   20 20 25 25 25
	   25 25 25 25 20
	   20 25 25 25 25
	   25 25 25 25 20
	   20 20 20 20 25
	   25 25 25 25 20
	   20 20 25 25 25
	   25 25 20 20 25
	   25 25 25 25 25
	   25 25 20 20 20
	   25 25 20 20 20
	   20 20 20 25 20
	   20 20 20 20 20
	   23 00
 000001F1 23 20 20 20 20		pmtitle4 db "#      %%     %  %     %  %            %   %   %   %  %      %   % %     %      #",0
	   20 20 25 25 20
	   20 20 20 20 25
	   20 20 25 20 20
	   20 20 20 25 20
	   20 25 20 20 20
	   20 20 20 20 20
	   20 20 20 20 25
	   20 20 20 25 20
	   20 20 25 20 20
	   20 25 20 20 25
	   20 20 20 20 20
	   20 25 20 20 20
	   25 20 25 20 20
	   20 20 20 25 20
	   20 20 20 20 20
	   23 00
 00000243 23 20 20 20 20		pmtitle5 db "#      %%     %  %     %  %            %   %   %   %  %      %   %  %    %      #",0
	   20 20 25 25 20
	   20 20 20 20 25
	   20 20 25 20 20
	   20 20 20 25 20
	   20 25 20 20 20
	   20 20 20 20 20
	   20 20 20 20 25
	   20 20 20 25 20
	   20 20 25 20 20
	   20 25 20 20 25
	   20 20 20 20 20
	   20 25 20 20 20
	   25 20 20 25 20
	   20 20 20 25 20
	   20 20 20 20 20
	   23 00
 00000295 23 20 20 20 20		pmtitle6 db "#      %%%%%%%%  %%%%%%%  %       %%%  %   %%%%%   %  %%%%%%%%   %   %   %      #",0
	   20 20 25 25 25
	   25 25 25 25 25
	   20 20 25 25 25
	   25 25 25 25 20
	   20 25 20 20 20
	   20 20 20 20 25
	   25 25 20 20 25
	   20 20 20 25 25
	   25 25 25 20 20
	   20 25 20 20 25
	   25 25 25 25 25
	   25 25 20 20 20
	   25 20 20 20 25
	   20 20 20 25 20
	   20 20 20 20 20
	   23 00
 000002E7 23 20 20 20 20		pmtitle7 db "#      %%        %     %  %            %           %  %      %   %    %  %      #",0
	   20 20 25 25 20
	   20 20 20 20 20
	   20 20 25 20 20
	   20 20 20 25 20
	   20 25 20 20 20
	   20 20 20 20 20
	   20 20 20 20 25
	   20 20 20 20 20
	   20 20 20 20 20
	   20 25 20 20 25
	   20 20 20 20 20
	   20 25 20 20 20
	   25 20 20 20 20
	   25 20 20 25 20
	   20 20 20 20 20
	   23 00
 00000339 23 20 20 20 20		pmtitle8 db "#      %%        %     %  %            %           %  %      %   %     % %      #",0
	   20 20 25 25 20
	   20 20 20 20 20
	   20 20 25 20 20
	   20 20 20 25 20
	   20 25 20 20 20
	   20 20 20 20 20
	   20 20 20 20 25
	   20 20 20 20 20
	   20 20 20 20 20
	   20 25 20 20 25
	   20 20 20 20 20
	   20 25 20 20 20
	   25 20 20 20 20
	   20 25 20 25 20
	   20 20 20 20 20
	   23 00
 0000038B 23 20 20 20 20		pmtitle9 db "#      %%        %     %  %%%%%%%%     %           %  %      %   %      %%      #",0
	   20 20 25 25 20
	   20 20 20 20 20
	   20 20 25 20 20
	   20 20 20 25 20
	   20 25 25 25 25
	   25 25 25 25 20
	   20 20 20 20 25
	   20 20 20 20 20
	   20 20 20 20 20
	   20 25 20 20 25
	   20 20 20 20 20
	   20 25 20 20 20
	   25 20 20 20 20
	   20 20 25 25 20
	   20 20 20 20 20
	   23 00
 000003DD 23 20 20 20 20		pmtitle10 db"#                                                                               #",0
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   23 00
 0000042F 23 23 23 23 23		pmtitle11 db"#################################################################################",0
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 23 23 23 23
	   23 00

 00000481 20 5F 5F 5F 20	    menutitle0 db " ___     ___ _________  ___     ___ ___   ___ ",0
	   20 20 20 20 5F
	   5F 5F 20 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 20 20 5F
	   5F 5F 20 20 20
	   20 20 5F 5F 5F
	   20 5F 5F 5F 20
	   20 20 5F 5F 5F
	   20 00
 000004B0 20 7C 20 20 5C	    menutitle1 db " |  \   /  | |  ______| |  \    | | | |   | | ",0
	   20 20 20 2F 20
	   20 7C 20 7C 20
	   20 5F 5F 5F 5F
	   5F 5F 7C 20 7C
	   20 20 5C 20 20
	   20 20 7C 20 7C
	   20 7C 20 7C 20
	   20 20 7C 20 7C
	   20 00
 000004DF 20 7C 20 7C 5C	    menutitle2 db " | |\\_//| | | |______  | |\\   | | | |   | |",0
	   5C 5F 2F 2F 7C
	   20 7C 20 7C 20
	   7C 5F 5F 5F 5F
	   5F 5F 20 20 7C
	   20 7C 5C 5C 20
	   20 20 7C 20 7C
	   20 7C 20 7C 20
	   20 20 7C 20 7C
	   00
 0000050D 20 7C 20 7C 20	    menutitle3 db " | | \_/ | | | _______| | | \\  | | | |   | | ",0
	   5C 5F 2F 20 7C
	   20 7C 20 7C 20
	   5F 5F 5F 5F 5F
	   5F 5F 7C 20 7C
	   20 7C 20 5C 5C
	   20 20 7C 20 7C
	   20 7C 20 7C 20
	   20 20 7C 20 7C
	   20 00
 0000053C 20 7C 20 7C 20	    menutitle4 db " | |     | | | |______  | |  \\ | | | |___| |",0
	   20 20 20 20 7C
	   20 7C 20 7C 20
	   7C 5F 5F 5F 5F
	   5F 5F 20 20 7C
	   20 7C 20 20 5C
	   5C 20 7C 20 7C
	   20 7C 20 7C 5F
	   5F 5F 7C 20 7C
	   00
 0000056A 20 7C 5F 7C 20	    menutitle5 db " |_|     |_| |________| |_|   \\|_| |_______| ",0
	   20 20 20 20 7C
	   5F 7C 20 7C 5F
	   5F 5F 5F 5F 5F
	   5F 5F 7C 20 7C
	   5F 7C 20 20 20
	   5C 5C 7C 5F 7C
	   20 7C 5F 5F 5F
	   5F 5F 5F 5F 7C
	   20 00

 00000599 2D 2D 2D 2D 2D	    menuopt0 db "---------------------------------",0
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 00
 000005BB 7C 20 20 31 2E	    menuopt1 db "|  1. Start Game ( 3 levels)    |",0
	   20 53 74 61 72
	   74 20 47 61 6D
	   65 20 28 20 33
	   20 6C 65 76 65
	   6C 73 29 20 20
	   20 20 7C 00
 000005DD 7C 20 20 32 2E	    menuopt2 db "|  2. Display Game Instructions |",0
	   20 44 69 73 70
	   6C 61 79 20 47
	   61 6D 65 20 49
	   6E 73 74 72 75
	   63 74 69 6F 6E
	   73 20 7C 00
 000005FF 7C 20 20 33 2E	    menuopt3 db "|  3. View Highscores /scores   |",0
	   20 56 69 65 77
	   20 48 69 67 68
	   73 63 6F 72 65
	   73 20 2F 73 63
	   6F 72 65 73 20
	   20 20 7C 00
 00000621 7C 20 20 34 2E	    menuopt4 db "|  4. Exit Game                 |",0
	   20 45 78 69 74
	   20 47 61 6D 65
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 7C 00
 00000643 7C 5F 5F 5F 5F	    menuopt5 db "|_______________________________|",0
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 7C 00

 00000665 45 6E 74 65 72	    menuoptchoose db "Enter your choice:  ",0
	   20 79 6F 75 72
	   20 63 68 6F 69
	   63 65 3A 20 20
	   00

 0000067A 2A 20 20 20 20	    level1opt0 db "*     ***** *       * *****  *          **    ",0
	   20 2A 2A 2A 2A
	   2A 20 2A 20 20
	   20 20 20 20 20
	   2A 20 2A 2A 2A
	   2A 2A 20 20 2A
	   20 20 20 20 20
	   20 20 20 20 20
	   2A 2A 20 20 20
	   20 00
 000006A9 2A 20 20 20 20	    level1opt1 db "*     *      *     *  *      *          **    ",0
	   20 2A 20 20 20
	   20 20 20 2A 20
	   20 20 20 20 2A
	   20 20 2A 20 20
	   20 20 20 20 2A
	   20 20 20 20 20
	   20 20 20 20 20
	   2A 2A 20 20 20
	   20 00
 000006D8 2A 20 20 20 20	    level1opt2 db "*     *****   *   *   *****  *          **    ",0
	   20 2A 2A 2A 2A
	   2A 20 20 20 2A
	   20 20 20 2A 20
	   20 20 2A 2A 2A
	   2A 2A 20 20 2A
	   20 20 20 20 20
	   20 20 20 20 20
	   2A 2A 20 20 20
	   20 00
 00000707 2A 20 20 20 20	    level1opt3 db "*     *        * *    *      *          **    ",0
	   20 2A 20 20 20
	   20 20 20 20 20
	   2A 20 2A 20 20
	   20 20 2A 20 20
	   20 20 20 20 2A
	   20 20 20 20 20
	   20 20 20 20 20
	   2A 2A 20 20 20
	   20 00
 00000736 2A 2A 2A 2A 2A	    level1opt4 db "***** *****     *     *****  *****      **    ",0
	   20 2A 2A 2A 2A
	   2A 20 20 20 20
	   20 2A 20 20 20
	   20 20 2A 2A 2A
	   2A 2A 20 20 2A
	   2A 2A 2A 2A 20
	   20 20 20 20 20
	   2A 2A 20 20 20
	   20 00

 00000765 2A 20 20 20 20	    level2opt0 db "*     ***** *       * *****  *         *****  ",0
	   20 2A 2A 2A 2A
	   2A 20 2A 20 20
	   20 20 20 20 20
	   2A 20 2A 2A 2A
	   2A 2A 20 20 2A
	   20 20 20 20 20
	   20 20 20 20 2A
	   2A 2A 2A 2A 20
	   20 00
 00000794 2A 20 20 20 20	    level2opt1 db "*     *      *     *  *      *             *  ",0
	   20 2A 20 20 20
	   20 20 20 2A 20
	   20 20 20 20 2A
	   20 20 2A 20 20
	   20 20 20 20 2A
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 2A 20
	   20 00
 000007C3 2A 20 20 20 20	    level2opt2 db "*     *****   *   *   *****  *         *****  ",0
	   20 2A 2A 2A 2A
	   2A 20 20 20 2A
	   20 20 20 2A 20
	   20 20 2A 2A 2A
	   2A 2A 20 20 2A
	   20 20 20 20 20
	   20 20 20 20 2A
	   2A 2A 2A 2A 20
	   20 00
 000007F2 2A 20 20 20 20	    level2opt3 db "*     *        * *    *      *         *      ",0
	   20 2A 20 20 20
	   20 20 20 20 20
	   2A 20 2A 20 20
	   20 20 2A 20 20
	   20 20 20 20 2A
	   20 20 20 20 20
	   20 20 20 20 2A
	   20 20 20 20 20
	   20 00
 00000821 2A 2A 2A 2A 2A	    level2opt4 db "***** *****     *     *****  *****     *****  ",0
	   20 2A 2A 2A 2A
	   2A 20 20 20 20
	   20 2A 20 20 20
	   20 20 2A 2A 2A
	   2A 2A 20 20 2A
	   2A 2A 2A 2A 20
	   20 20 20 20 2A
	   2A 2A 2A 2A 20
	   20 00

 00000850 2A 20 20 20 20	    level3opt0 db "*     ***** *       * *****  *         *****  ",0
	   20 2A 2A 2A 2A
	   2A 20 2A 20 20
	   20 20 20 20 20
	   2A 20 2A 2A 2A
	   2A 2A 20 20 2A
	   20 20 20 20 20
	   20 20 20 20 2A
	   2A 2A 2A 2A 20
	   20 00
 0000087F 2A 20 20 20 20	    level3opt1 db "*     *      *     *  *      *             *  ",0
	   20 2A 20 20 20
	   20 20 20 2A 20
	   20 20 20 20 2A
	   20 20 2A 20 20
	   20 20 20 20 2A
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 2A 20
	   20 00
 000008AE 2A 20 20 20 20	    level3opt2 db "*     *****   *   *   *****  *         *****  ",0
	   20 2A 2A 2A 2A
	   2A 20 20 20 2A
	   20 20 20 2A 20
	   20 20 2A 2A 2A
	   2A 2A 20 20 2A
	   20 20 20 20 20
	   20 20 20 20 2A
	   2A 2A 2A 2A 20
	   20 00
 000008DD 2A 20 20 20 20	    level3opt3 db "*     *        * *    *      *             *  ",0
	   20 2A 20 20 20
	   20 20 20 20 20
	   2A 20 2A 20 20
	   20 20 2A 20 20
	   20 20 20 20 2A
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 2A 20
	   20 00
 0000090C 2A 2A 2A 2A 2A	    level3opt4 db "***** *****     *     *****  *****     *****  ",0
	   20 2A 2A 2A 2A
	   2A 20 20 20 20
	   20 2A 20 20 20
	   20 20 2A 2A 2A
	   2A 2A 20 20 2A
	   2A 2A 2A 2A 20
	   20 20 20 20 2A
	   2A 2A 2A 2A 20
	   20 00

 0000093B 20 45 6E 74 65	    leveloptchoose1 db " Enter you choice (1: Level 1, 2: Level 2 , 3: Level 3) ",0
	   72 20 79 6F 75
	   20 63 68 6F 69
	   63 65 20 28 31
	   3A 20 4C 65 76
	   65 6C 20 31 2C
	   20 32 3A 20 4C
	   65 76 65 6C 20
	   32 20 2C 20 33
	   3A 20 4C 65 76
	   65 6C 20 33 29
	   20 00
 00000974 20 52 65 74 75	    leveloptchoose2 db " Return to Main Menu (press 4), Exit Game (press 5) ",0
	   72 6E 20 74 6F
	   20 4D 61 69 6E
	   20 4D 65 6E 75
	   20 28 70 72 65
	   73 73 20 34 29
	   2C 20 45 78 69
	   74 20 47 61 6D
	   65 20 28 70 72
	   65 73 73 20 35
	   29 20 00


 000009A9 20 20 20 20 20	    instruc1 db "                          INSTRUCTIONS                             ",0
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 49 4E 53 54
	   52 55 43 54 49
	   4F 4E 53 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 00
 000009ED 5F 5F 5F 5F 5F	    instruc2 db "_______________________________________________________________________",0
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 00
 00000A35 2D 2D 2D 2D 2D	    instruc3 db "-----------------------------------------------------------------------",0
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 00
 00000A7D 20 31 2E 20 54	    instruc4 db " 1. To earn points eat the pellets.",0
	   6F 20 65 61 72
	   6E 20 70 6F 69
	   6E 74 73 20 65
	   61 74 20 74 68
	   65 20 70 65 6C
	   6C 65 74 73 2E
	   00
 00000AA1 20 32 2E 20 45	    instruc5 db " 2. Each pellet is worth one point.",0
	   61 63 68 20 70
	   65 6C 6C 65 74
	   20 69 73 20 77
	   6F 72 74 68 20
	   6F 6E 65 20 70
	   6F 69 6E 74 2E
	   00
 00000AC5 20 33 20 20 53	    instruc6 db " 3  Stay away from the ghosts, if one catches you, You lose a life.",0
	   74 61 79 20 61
	   77 61 79 20 66
	   72 6F 6D 20 74
	   68 65 20 67 68
	   6F 73 74 73 2C
	   20 69 66 20 6F
	   6E 65 20 63 61
	   74 63 68 65 73
	   20 79 6F 75 2C
	   20 59 6F 75 20
	   6C 6F 73 65 20
	   61 20 6C 69 66
	   65 2E 00
 00000B09 20 34 2E 20 55	    instruc7 db " 4. Use W,A,S,D keys move up,down,left and right respectively.",0
	   73 65 20 57 2C
	   41 2C 53 2C 44
	   20 6B 65 79 73
	   20 6D 6F 76 65
	   20 75 70 2C 64
	   6F 77 6E 2C 6C
	   65 66 74 20 61
	   6E 64 20 72 69
	   67 68 74 20 72
	   65 73 70 65 63
	   74 69 76 65 6C
	   79 2E 00
 00000B48 5F 5F 5F 5F 5F	    instruc8 db "________________________________________________________________________",0
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 5F 5F 5F
	   5F 5F 00
 00000B91 2D 2D 2D 2D 2D	    instruc9 db "------------------------------------------------------------------------",0
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 2D 2D 2D
	   2D 2D 00

 00000BDA 50 72 65 73 73	    instrucChoose db "Press 1 to return to menu, Press 2 to Exit Game: ",0
	   20 31 20 74 6F
	   20 72 65 74 75
	   72 6E 20 74 6F
	   20 6D 65 6E 75
	   2C 20 50 72 65
	   73 73 20 32 20
	   74 6F 20 45 78
	   69 74 20 47 61
	   6D 65 3A 20 00

 00000C0C 20 20 20 20 20	    hsTitle0 db "        ______        _____  _____ ______ _____ _____ _____  ",0
	   20 20 20 5F 5F
	   5F 5F 5F 5F 20
	   20 20 20 20 20
	   20 20 5F 5F 5F
	   5F 5F 20 20 5F
	   5F 5F 5F 5F 20
	   5F 5F 5F 5F 5F
	   5F 20 5F 5F 5F
	   5F 5F 20 5F 5F
	   5F 5F 5F 20 5F
	   5F 5F 5F 5F 20
	   20 00
 00000C4A 7C 20 20 20 7C	    hsTitle1 db "|   | | |      |   |  |      |     |    | |   | |     |      ",0
	   20 7C 20 7C 20
	   20 20 20 20 20
	   7C 20 20 20 7C
	   20 20 7C 20 20
	   20 20 20 20 7C
	   20 20 20 20 20
	   7C 20 20 20 20
	   7C 20 7C 20 20
	   20 7C 20 7C 20
	   20 20 20 20 7C
	   20 20 20 20 20
	   20 00
 00000C88 7C 5F 5F 5F 7C	    hsTitle2 db "|___| | |  ___ |___|  |____  |     |    | |___| |____ |____  ",0
	   20 7C 20 7C 20
	   20 5F 5F 5F 20
	   7C 5F 5F 5F 7C
	   20 20 7C 5F 5F
	   5F 5F 20 20 7C
	   20 20 20 20 20
	   7C 20 20 20 20
	   7C 20 7C 5F 5F
	   5F 7C 20 7C 5F
	   5F 5F 5F 20 7C
	   5F 5F 5F 5F 20
	   20 00
 00000CC6 7C 20 20 20 7C	    hsTitle3 db "|   | | |    | |   |       | |     |    | | \   |          | ",0
	   20 7C 20 7C 20
	   20 20 20 7C 20
	   7C 20 20 20 7C
	   20 20 20 20 20
	   20 20 7C 20 7C
	   20 20 20 20 20
	   7C 20 20 20 20
	   7C 20 7C 20 5C
	   20 20 20 7C 20
	   20 20 20 20 20
	   20 20 20 20 7C
	   20 00
 00000D04 7C 20 20 20 7C	    hsTitle4 db "|   | | |____| |   |  _____| |____ |____| |  \  |____  ____| ",0
	   20 7C 20 7C 5F
	   5F 5F 5F 7C 20
	   7C 20 20 20 7C
	   20 20 5F 5F 5F
	   5F 5F 7C 20 7C
	   5F 5F 5F 5F 20
	   7C 5F 5F 5F 5F
	   7C 20 7C 20 20
	   5C 20 20 7C 5F
	   5F 5F 5F 20 20
	   5F 5F 5F 5F 7C
	   20 00

 00000D42 2E 2E 2E 47 41	    gamePause1 db "...GAME PAUSED...",0
	   4D 45 20 50 41
	   55 53 45 44 2E
	   2E 2E 00
 00000D54 50 72 65 73 73	    gamePause2 db "Press 1: Resume Game",0
	   20 31 3A 20 52
	   65 73 75 6D 65
	   20 47 61 6D 65
	   00
 00000D69 50 72 65 73 73	    gamePause3 db "Press 2: Go to Menu",0
	   20 32 3A 20 47
	   6F 20 74 6F 20
	   4D 65 6E 75 00
 00000D7D 50 72 65 73 73	    gamePause4 db "Press 3: Exit Game",0
	   20 33 3A 20 45
	   78 69 74 20 47
	   61 6D 65 00


 00000D90 20 20 5F 5F 5F	    gameOverMsg1 db "  ____                         ___                 ",0
	   5F 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 5F 5F 5F 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 20 20
	   20 00
 00000DC4 20 2F 20 5F 5F	    gameOverMsg2 db " / ___| __ _ _ __ ___   ___   / _ \__   _____ _ __",0
	   5F 7C 20 5F 5F
	   20 5F 20 5F 20
	   5F 5F 20 5F 5F
	   5F 20 20 20 5F
	   5F 5F 20 20 20
	   2F 20 5F 20 5C
	   5F 5F 20 20 20
	   5F 5F 5F 5F 5F
	   20 5F 20 5F 5F
	   00
 00000DF7 7C 20 7C 20 20	    gameOverMsg3 db "| |  _ / _` | '_ ` _ \ / _ \ | | | \ \ / / _ \ '__|",0
	   5F 20 2F 20 5F
	   60 20 7C 20 27
	   5F 20 60 20 5F
	   20 5C 20 2F 20
	   5F 20 5C 20 7C
	   20 7C 20 7C 20
	   5C 20 5C 20 2F
	   20 2F 20 5F 20
	   5C 20 27 5F 5F
	   7C 00
 00000E2B 7C 20 7C 5F 7C	    gameOverMsg4 db "| |_| | (_| | | | | | |  __/ | |_| |\ V /  __/ |   ",0
	   20 7C 20 28 5F
	   7C 20 7C 20 7C
	   20 7C 20 7C 20
	   7C 20 7C 20 20
	   5F 5F 2F 20 7C
	   20 7C 5F 7C 20
	   7C 5C 20 56 20
	   2F 20 20 5F 5F
	   2F 20 7C 20 20
	   20 00
 00000E5F 20 5C 5F 5F 5F	    gameOverMsg5 db " \____|\__,_|_| |_| |_|\___|  \___/  \_/ \___|_|   ",0
	   5F 7C 5C 5F 5F
	   2C 5F 7C 5F 7C
	   20 7C 5F 7C 20
	   7C 5F 7C 5C 5F
	   5F 5F 7C 20 20
	   5C 5F 5F 5F 2F
	   20 20 5C 5F 2F
	   20 5C 5F 5F 5F
	   7C 5F 7C 20 20
	   20 00
 00000E93 59 4F 55 52 20	    scoreDisplay db "YOUR FINAL SCORE: ",0
	   46 49 4E 41 4C
	   20 53 43 4F 52
	   45 3A 20 00
 00000EA6 50 52 45 53 53	    returnOption db "PRESS 1 TO RETURN TO MENU",0
	   20 31 20 54 4F
	   20 52 45 54 55
	   52 4E 20 54 4F
	   20 4D 45 4E 55
	   00


 00000EC0 20 2A 20 20 20	    levelCompleteMsg1 db " *       *   *****   *     * ",0
	   20 20 20 20 2A
	   20 20 20 2A 2A
	   2A 2A 2A 20 20
	   20 2A 20 20 20
	   20 20 2A 20 00
 00000EDE 20 2A 20 20 20	    levelCompleteMsg2 db " *       *   *   *   **    * ",0
	   20 20 20 20 2A
	   20 20 20 2A 20
	   20 20 2A 20 20
	   20 2A 2A 20 20
	   20 20 2A 20 00
 00000EFC 20 2A 20 20 20	    levelCompleteMsg3 db " *   *   *   *   *   * *   * ",0
	   2A 20 20 20 2A
	   20 20 20 2A 20
	   20 20 2A 20 20
	   20 2A 20 2A 20
	   20 20 2A 20 00
 00000F1A 20 2A 20 20 2A	    levelCompleteMsg4 db " *  * *  *   *   *   *  *  * ",0
	   20 2A 20 20 2A
	   20 20 20 2A 20
	   20 20 2A 20 20
	   20 2A 20 20 2A
	   20 20 2A 20 00
 00000F38 20 2A 20 2A 20	    levelCompleteMsg5 db " * *   * *   *   *   *   * * ",0
	   20 20 2A 20 2A
	   20 20 20 2A 20
	   20 20 2A 20 20
	   20 2A 20 20 20
	   2A 20 2A 20 00
 00000F56 20 2A 20 20 20	    levelCompleteMsg6 db " *       *   *****   *    ** ",0
	   20 20 20 20 2A
	   20 20 20 2A 2A
	   2A 2A 2A 20 20
	   20 2A 20 20 20
	   20 2A 2A 20 00




				    ;yeh colors hain 
 = 00000004			    redTxt = red+(black*16);
 = 0000000E			    yellowTxt =yellow+(black*16);
 = 00000002			    greenTxt =green+ (black*16);
 = 00000001			    blueTxt =blue+ (black*16);
 = 0000000F			    whiteTxt =white+ (black *16);
 = 00000005			    purpleTxt = magenta + (black*16)
 = 00000000			    blackTxt= black +(black*16)



				; Add these procedures to your code section

 00000F74 00			    userChoice db ?
 00000F75 00			    temp db ?
 00000F76 00			    currentLevel db ?

				;-----------------------------------------
				;level 1 vars for drawing
 00000F77 50 6C 61 79 65	    playerName  BYTE "Player 1", 0
	   72 20 31 00
 00000F80 53 63 6F 72 65	    scoreMsg    BYTE "Score: ", 0
	   3A 20 00
 00000F88 4C 69 76 65 73	    livesMsg    BYTE "Lives: ", 0
	   3A 20 00
 00000F90 4C 65 76 65 6C	    levelMsg    BYTE "Level: ", 0
	   3A 20 00


 00000F98 23			wallChar    BYTE '#'
 00000F99 20			emptyChar   BYTE ' '

				;---------------------------------------
				;other level 1 vars 

 00000F9A 6F 00			pelletChar db 'o',0
 00000F9C 58 00			pacmanChar db 'X',0
 00000F9E 47 00			ghostChar db 'G',0
 00000FA0 14			pelletCount db 20
 00000FA1  00000014 [		pelletPositions db 20 dup(0,0) ; Array of x,y positions
	    00 00
	   ]
 00000FC9 0A			pacmanX db 10
 00000FCA 0F			pacmanY db 15
 00000FCB 32			ghostX db 50
 00000FCC 0F			ghostY db 15
 00000FCD 00000000		score dd 0
 00000FD1 00000003		lives dd 3
 00000FD5 00000001		level dd 1
 00000FD9 00			oldPacmanX db ?
 00000FDA 00			oldPacmanY db ?

				;.................................................
				;level 1 ghost vars
 00000FDB 01			    ghostDir db 1  ; 1=right, 2=left, 3=up, 4=down
 00000FDC 00			    oldGhostX db ?
 00000FDD 00			    oldGhostY db ?
 00000000			.code
 00000000			main proc
 00000000  E8 00000000 E	    call Clrscr
 00000005  E8 00000059		    call WelcomeScreen
 0000000A  E8 0000018D		    call MenuScreen
 0000000F  E8 00000638		    call Level1Screen
				    
				    exit
 00000014  6A 00	   *	    push   +000000000h
 00000016  E8 00000000 E   *	    call   ExitProcess
 0000001B			main endp

				;-----------------------------------------------------
 0000001B			introSound PROC
 0000001B  50			    push eax
 0000001C  52			    push edx

				    INVOKE PlaySound, OFFSET PacmanIntro, NULL, SND_FILENAME OR SND_ASYNC
 0000001D  68 00020001	   *	    push   +000020001h
 00000022  6A 00	   *	    push   +000000000h
 00000024  68 00000028 R   *	    push   dword  ptr OFFSET FLAT: PacmanIntro
 00000029  E8 00000000 E   *	    call   PlaySound
				    
 0000002E  85 C0		    test eax, eax
 00000030  75 0A		    jnz no_error1
 00000032  BA 0000005C R	    mov edx, OFFSET SoundError
 00000037  E8 00000000 E	    call WriteString
 0000003C			no_error1:
 0000003C  5A			    pop edx
 0000003D  58			    pop eax
 0000003E  C3			    ret
 0000003F			introSound ENDP

				;-----------------------------------------------------
 0000003F			levelSound PROC
 0000003F  50			    push eax
 00000040  52			    push edx
				    INVOKE PlaySound, OFFSET midSound, NULL, SND_FILENAME OR SND_ASYNC
 00000041  68 00020001	   *	    push   +000020001h
 00000046  6A 00	   *	    push   +000000000h
 00000048  68 00000000 R   *	    push   dword  ptr OFFSET FLAT: midSound
 0000004D  E8 00000000 E   *	    call   PlaySound
 00000052  85 C0		    test eax, eax
 00000054  75 0A		    jnz no_error2
 00000056  BA 0000005C R	    mov edx, OFFSET SoundError
 0000005B  E8 00000000 E	    call WriteString
 00000060			no_error2:
 00000060  5A			    pop edx
 00000061  58			    pop eax
 00000062  C3			    ret
 00000063			levelSound ENDP

				;-----------------------------------------------------
 00000063			WelcomeScreen proc

 00000063  E8 FFFFFFB3		    call introSound

				    ; Red Color
 00000068  B8 00000004		    mov eax, redTxt
 0000006D  E8 00000000 E	    call SetTextColor

 00000072  B6 05		    mov dh,5
 00000074  B2 0C		    mov dl,12
 00000076  E8 00000000 E	    call Gotoxy
 0000007B  BA 000000FB R	    mov edx, offset pmtitle1
 00000080  E8 00000000 E	    call WriteString

 00000085  B6 06		    mov dh, 6
 00000087  B2 0C		    mov dl, 12
 00000089  E8 00000000 E	    call Gotoxy
 0000008E  BA 0000014D R	    mov edx, offset pmtitle2
 00000093  E8 00000000 E	    call WriteString

 00000098  B6 07		    mov dh, 7
 0000009A  B2 0C		    mov dl, 12
 0000009C  E8 00000000 E	    call Gotoxy
 000000A1  BA 0000019F R	    mov edx, offset pmtitle3
 000000A6  E8 00000000 E	    call WriteString

				    ; Blue Color
 000000AB  B8 00000001		    mov eax, blueTxt
 000000B0  E8 00000000 E	    call SetTextColor

 000000B5  B6 08		    mov dh, 8
 000000B7  B2 0C		    mov dl, 12
 000000B9  E8 00000000 E	    call Gotoxy
 000000BE  BA 000001F1 R	    mov edx, offset pmtitle4
 000000C3  E8 00000000 E	    call WriteString

 000000C8  B6 09		    mov dh, 9
 000000CA  B2 0C		    mov dl, 12
 000000CC  E8 00000000 E	    call Gotoxy
 000000D1  BA 00000243 R	    mov edx, offset pmtitle5
 000000D6  E8 00000000 E	    call WriteString

 000000DB  B6 0A		    mov dh, 10
 000000DD  B2 0C		    mov dl, 12
 000000DF  E8 00000000 E	    call Gotoxy
 000000E4  BA 00000295 R	    mov edx, offset pmtitle6
 000000E9  E8 00000000 E	    call WriteString

 000000EE  B6 0B		    mov dh, 11
 000000F0  B2 0C		    mov dl, 12
 000000F2  E8 00000000 E	    call Gotoxy
 000000F7  BA 000002E7 R	    mov edx, offset pmtitle7
 000000FC  E8 00000000 E	    call WriteString

				    ; Green Color 
 00000101  B8 00000002		    mov eax, greenTxt
 00000106  E8 00000000 E	    call SetTextColor

 0000010B  B6 0C		    mov dh, 12
 0000010D  B2 0C		    mov dl, 12
 0000010F  E8 00000000 E	    call Gotoxy
 00000114  BA 00000339 R	    mov edx, offset pmtitle8
 00000119  E8 00000000 E	    call WriteString

 0000011E  B6 0D		    mov dh,13
 00000120  B2 0C		    mov dl,12
 00000122  E8 00000000 E	    call Gotoxy
 00000127  BA 0000038B R	    mov edx, offset pmtitle9
 0000012C  E8 00000000 E	    call WriteString

 00000131  B6 0E		    mov dh, 14
 00000133  B2 0C		    mov dl, 12
 00000135  E8 00000000 E	    call Gotoxy
 0000013A  BA 000003DD R	    mov edx, offset pmtitle10
 0000013F  E8 00000000 E	    call WriteString

 00000144  B6 0F		    mov dh, 15
 00000146  B2 0C		    mov dl, 12
 00000148  E8 00000000 E	    call Gotoxy
 0000014D  BA 0000042F R	    mov edx, offset pmtitle11
 00000152  E8 00000000 E	    call WriteString

				    
 00000157  B8 0000000E		    mov eax, yellowTxt
 0000015C  E8 00000000 E	    call SetTextColor

 00000161  B6 13		    mov dh, 19
 00000163  B2 0C		    mov dl, 12
 00000165  E8 00000000 E	    call Gotoxy
 0000016A  BA 00000092 R	    mov edx, offset inputName
 0000016F  E8 00000000 E	    call WriteString

				    ; asking for user input
 00000174  BA 000000A7 R	    mov edx, offset userName
 00000179  B9 00000032		    mov ecx, lengthof userName
 0000017E  E8 00000000 E	    call ReadString

 00000183  B6 16		    mov dh, 22
 00000185  B2 0B		    mov dl,11
 00000187  E8 00000000 E	    call Gotoxy
 0000018C  BA 00000F75 R	    mov edx, offset temp
 00000191  E8 00000000 E	    call WaitMsg
 00000196  E8 00000000 E	    call Clrscr
 0000019B  C3			    ret
 0000019C			WelcomeScreen endp


				;-----------------------------------------------------
 0000019C			MenuScreen proc

 0000019C  E8 FFFFFE7A		    call introSound

 000001A1  E8 00000000 E	    call Clrscr
				    
 000001A6  B8 00000001		    mov eax, blueTxt
 000001AB  E8 00000000 E	    call SetTextColor
				    
 000001B0  B6 05		    mov dh, 5
 000001B2  B2 1E		    mov dl, 30
 000001B4  E8 00000000 E	    call Gotoxy
 000001B9  BA 00000481 R	    mov edx, offset menutitle0
 000001BE  E8 00000000 E	    call WriteString
				    
 000001C3  B6 06		    mov dh, 6
 000001C5  B2 1E		    mov dl, 30
 000001C7  E8 00000000 E	    call Gotoxy
 000001CC  BA 000004B0 R	    mov edx, offset menutitle1
 000001D1  E8 00000000 E	    call WriteString
				    
 000001D6  B6 07		    mov dh, 7
 000001D8  B2 1E		    mov dl, 30
 000001DA  E8 00000000 E	    call Gotoxy
 000001DF  BA 000004DF R	    mov edx, offset menutitle2
 000001E4  E8 00000000 E	    call WriteString
				    
 000001E9  B6 08		    mov dh, 8
 000001EB  B2 1E		    mov dl, 30
 000001ED  E8 00000000 E	    call Gotoxy
 000001F2  BA 0000050D R	    mov edx, offset menutitle3
 000001F7  E8 00000000 E	    call WriteString
				    
 000001FC  B6 09		    mov dh, 9
 000001FE  B2 1E		    mov dl, 30
 00000200  E8 00000000 E	    call Gotoxy
 00000205  BA 0000053C R	    mov edx, offset menutitle4
 0000020A  E8 00000000 E	    call WriteString
				    
 0000020F  B6 0A		    mov dh, 10
 00000211  B2 1E		    mov dl, 30
 00000213  E8 00000000 E	    call Gotoxy
 00000218  BA 0000056A R	    mov edx, offset menutitle5
 0000021D  E8 00000000 E	    call WriteString
				    
				    ;menu options in green
 00000222  B8 00000002		    mov eax, greenTxt
 00000227  E8 00000000 E	    call SetTextColor
				    
 0000022C  B6 0D		    mov dh, 13
 0000022E  B2 23		    mov dl, 35
 00000230  E8 00000000 E	    call Gotoxy
 00000235  BA 00000599 R	    mov edx, offset menuopt0
 0000023A  E8 00000000 E	    call WriteString
				    
 0000023F  B6 0E		    mov dh, 14
 00000241  B2 23		    mov dl, 35
 00000243  E8 00000000 E	    call Gotoxy
 00000248  BA 000005BB R	    mov edx, offset menuopt1
 0000024D  E8 00000000 E	    call WriteString
				    
 00000252  B6 0F		    mov dh, 15
 00000254  B2 23		    mov dl, 35
 00000256  E8 00000000 E	    call Gotoxy
 0000025B  BA 000005DD R	    mov edx, offset menuopt2
 00000260  E8 00000000 E	    call WriteString
				    
 00000265  B6 10		    mov dh, 16
 00000267  B2 23		    mov dl, 35
 00000269  E8 00000000 E	    call Gotoxy
 0000026E  BA 000005FF R	    mov edx, offset menuopt3
 00000273  E8 00000000 E	    call WriteString
				    
 00000278  B6 11		    mov dh, 17
 0000027A  B2 23		    mov dl, 35
 0000027C  E8 00000000 E	    call Gotoxy
 00000281  BA 00000621 R	    mov edx, offset menuopt4
 00000286  E8 00000000 E	    call WriteString
				    
 0000028B  B6 12		    mov dh, 18
 0000028D  B2 23		    mov dl, 35
 0000028F  E8 00000000 E	    call Gotoxy
 00000294  BA 00000643 R	    mov edx, offset menuopt5
 00000299  E8 00000000 E	    call WriteString
				    
				    ; user choice
 0000029E  B8 0000000F		    mov eax, whiteTxt
 000002A3  E8 00000000 E	    call SetTextColor
				    
 000002A8  B6 14		    mov dh, 20
 000002AA  B2 23		    mov dl, 35
 000002AC  E8 00000000 E	    call Gotoxy
 000002B1  BA 00000665 R	    mov edx, offset menuoptchoose
 000002B6  E8 00000000 E	    call WriteString
				    
 000002BB  E8 00000000 E	    call ReadInt
 000002C0  A2 00000F74 R	    mov userChoice, al
				    
				  
 000002C5  80 3D 00000F74 R	    cmp userChoice, 1
	   01
 000002CC  74 20		    je LevelSelection
 000002CE  80 3D 00000F74 R	    cmp userChoice, 2
	   02
 000002D5  74 21		    je ShowInstructions
 000002D7  80 3D 00000F74 R	    cmp userChoice, 3
	   03
 000002DE  74 22		    je ShowHighscores
 000002E0  80 3D 00000F74 R	    cmp userChoice, 4
	   04
 000002E7  74 23		    je ExitGame
				    
				    ;if user ghalat option then go to menu (already udhr he)
 000002E9  E9 FFFFFEAE		    jmp MenuScreen
				    
 000002EE			LevelSelection:
 000002EE  E8 00000025		    call LevelSelectScreen
 000002F3  E9 FFFFFEA4		    jmp MenuScreen
				    
 000002F8			ShowInstructions:
 000002F8  E8 000001DF		    call InstructionsScreen
 000002FD  E9 FFFFFE9A		    jmp MenuScreen
				    
 00000302			ShowHighscores:
 00000302  E8 000002AF		    call HighscoresScreen
 00000307  E9 FFFFFE90		    jmp MenuScreen
				    
 0000030C			ExitGame:
 0000030C  E8 00000000 E	    call Clrscr
				    exit
 00000311  6A 00	   *	    push   +000000000h
 00000313  E8 00000000 E   *	    call   ExitProcess
 00000318			MenuScreen endp

				;-----------------------------------------------------
 00000318			LevelSelectScreen proc

 00000318  E8 FFFFFCFE		    call introSound

 0000031D  E8 00000000 E	    call Clrscr
				    
				    ; Display level selection title
 00000322  B8 00000001		    mov eax, blueTxt
 00000327  E8 00000000 E	    call SetTextColor
				    
				    
				    ; level options
 0000032C  B8 00000004		    mov eax, redTxt
 00000331  E8 00000000 E	    call SetTextColor
				    
				    ; Level 1
 00000336  B6 03		    mov dh, 3
 00000338  B2 1E		    mov dl, 30
 0000033A  E8 00000000 E	    call Gotoxy
 0000033F  BA 0000067A R	    mov edx, offset level1opt0
 00000344  E8 00000000 E	    call WriteString
				    
 00000349  B6 04		    mov dh, 4
 0000034B  B2 1E		    mov dl, 30
 0000034D  E8 00000000 E	    call Gotoxy
 00000352  BA 000006A9 R	    mov edx, offset level1opt1
 00000357  E8 00000000 E	    call WriteString
				    
 0000035C  B6 05		    mov dh, 5
 0000035E  B2 1E		    mov dl, 30
 00000360  E8 00000000 E	    call Gotoxy
 00000365  BA 000006D8 R	    mov edx, offset level1opt2
 0000036A  E8 00000000 E	    call WriteString
				    
 0000036F  B6 06		    mov dh, 6
 00000371  B2 1E		    mov dl, 30
 00000373  E8 00000000 E	    call Gotoxy
 00000378  BA 00000707 R	    mov edx, offset level1opt3
 0000037D  E8 00000000 E	    call WriteString
				    
 00000382  B6 07		    mov dh, 7
 00000384  B2 1E		    mov dl, 30
 00000386  E8 00000000 E	    call Gotoxy
 0000038B  BA 00000736 R	    mov edx, offset level1opt4
 00000390  E8 00000000 E	    call WriteString
				    
				    ; Level 2
 00000395  B6 0A		    mov dh, 10
 00000397  B2 1E		    mov dl, 30
 00000399  E8 00000000 E	    call Gotoxy
 0000039E  BA 00000765 R	    mov edx, offset level2opt0
 000003A3  E8 00000000 E	    call WriteString
				    
 000003A8  B6 0B		    mov dh, 11
 000003AA  B2 1E		    mov dl, 30
 000003AC  E8 00000000 E	    call Gotoxy
 000003B1  BA 00000794 R	    mov edx, offset level2opt1
 000003B6  E8 00000000 E	    call WriteString
				    
 000003BB  B6 0C		    mov dh, 12
 000003BD  B2 1E		    mov dl, 30
 000003BF  E8 00000000 E	    call Gotoxy
 000003C4  BA 000007C3 R	    mov edx, offset level2opt2
 000003C9  E8 00000000 E	    call WriteString
				    
 000003CE  B6 0D		    mov dh, 13
 000003D0  B2 1E		    mov dl, 30
 000003D2  E8 00000000 E	    call Gotoxy
 000003D7  BA 000007F2 R	    mov edx, offset level2opt3
 000003DC  E8 00000000 E	    call WriteString
				    
 000003E1  B6 0E		    mov dh, 14
 000003E3  B2 1E		    mov dl, 30
 000003E5  E8 00000000 E	    call Gotoxy
 000003EA  BA 00000821 R	    mov edx, offset level2opt4
 000003EF  E8 00000000 E	    call WriteString
				    
				    ; Level 3
 000003F4  B6 11		    mov dh, 17
 000003F6  B2 1E		    mov dl, 30
 000003F8  E8 00000000 E	    call Gotoxy
 000003FD  BA 00000850 R	    mov edx, offset level3opt0
 00000402  E8 00000000 E	    call WriteString
				    
 00000407  B6 12		    mov dh, 18
 00000409  B2 1E		    mov dl, 30
 0000040B  E8 00000000 E	    call Gotoxy
 00000410  BA 0000087F R	    mov edx, offset level3opt1
 00000415  E8 00000000 E	    call WriteString
				    
 0000041A  B6 13		    mov dh, 19
 0000041C  B2 1E		    mov dl, 30
 0000041E  E8 00000000 E	    call Gotoxy
 00000423  BA 000008AE R	    mov edx, offset level3opt2
 00000428  E8 00000000 E	    call WriteString
				    
 0000042D  B6 14		    mov dh, 20
 0000042F  B2 1E		    mov dl, 30
 00000431  E8 00000000 E	    call Gotoxy
 00000436  BA 000008DD R	    mov edx, offset level3opt3
 0000043B  E8 00000000 E	    call WriteString
				    
 00000440  B6 15		    mov dh, 21
 00000442  B2 1E		    mov dl, 30
 00000444  E8 00000000 E	    call Gotoxy
 00000449  BA 0000090C R	    mov edx, offset level3opt4
 0000044E  E8 00000000 E	    call WriteString
				    
				    ;user choice
 00000453  B8 0000000F		    mov eax, whiteTxt
 00000458  E8 00000000 E	    call SetTextColor
				    
 0000045D  B6 17		    mov dh, 23
 0000045F  B2 14		    mov dl, 20
 00000461  E8 00000000 E	    call Gotoxy
 00000466  BA 0000093B R	    mov edx, offset leveloptchoose1
 0000046B  E8 00000000 E	    call WriteString
				    
 00000470  B6 18		    mov dh, 24
 00000472  B2 14		    mov dl, 20
 00000474  E8 00000000 E	    call Gotoxy
 00000479  BA 00000974 R	    mov edx, offset leveloptchoose2
 0000047E  E8 00000000 E	    call WriteString
				    
 00000483  B6 19		    mov dh, 25
 00000485  B2 14		    mov dl, 20
 00000487  E8 00000000 E	    call Gotoxy
 0000048C  E8 00000000 E	    call ReadInt
				    
				    ; Processing choice made
 00000491  3C 01		    cmp al, 1
 00000493  74 15		    je StartLevel1
 00000495  3C 02		    cmp al, 2
 00000497  74 1E		    je StartLevel2
 00000499  3C 03		    cmp al, 3
 0000049B  74 26		    je StartLevel3
 0000049D  3C 04		    cmp al, 4
 0000049F  74 2E		    je ReturnToMenu
 000004A1  3C 05		    cmp al, 5
 000004A3  74 2B		    je ExitGame
				    
				    ; Invalid choice - show menu again
 000004A5  E9 FFFFFE6E		    jmp LevelSelectScreen

 000004AA			StartLevel1:
 000004AA  C6 05 00000F76 R	    mov currentLevel, 1
	   01
 000004B1  E8 00000196		    call Level1Screen
 000004B6  C3			    ret

 000004B7			StartLevel2:
 000004B7  C6 05 00000F76 R	    mov currentLevel, 2
	   02
 000004BE  E8 0000064A		    call Level2Screen  

 000004C3			StartLevel3:
 000004C3  C6 05 00000F76 R	    mov currentLevel, 3
	   03
 000004CA  E8 0000063E		    call Level3Screen  
				    
 000004CF			ReturnToMenu:
 000004CF  C3			    ret
				    
 000004D0			ExitGame:
 000004D0  E8 00000000 E	    call Clrscr
				    exit
 000004D5  6A 00	   *	    push   +000000000h
 000004D7  E8 00000000 E   *	    call   ExitProcess
 000004DC			LevelSelectScreen endp

				;-----------------------------------------------------
 000004DC			InstructionsScreen proc

 000004DC  E8 FFFFFB3A		    call introSound

 000004E1  E8 00000000 E	    call Clrscr
				    
				    ; Display instructions title
 000004E6  B8 00000001		    mov eax, blueTxt
 000004EB  E8 00000000 E	    call SetTextColor
				    
 000004F0  B6 05		    mov dh, 5
 000004F2  B2 0F		    mov dl, 15
 000004F4  E8 00000000 E	    call Gotoxy
 000004F9  BA 000009A9 R	    mov edx, offset instruc1
 000004FE  E8 00000000 E	    call WriteString
				    
 00000503  B6 06		    mov dh, 6
 00000505  B2 0F		    mov dl, 15
 00000507  E8 00000000 E	    call Gotoxy
 0000050C  BA 000009ED R	    mov edx, offset instruc2
 00000511  E8 00000000 E	    call WriteString
				    
				    ; Display instructions text
 00000516  B8 00000002		    mov eax, greenTxt
 0000051B  E8 00000000 E	    call SetTextColor
				    
 00000520  B6 08		    mov dh, 8
 00000522  B2 0F		    mov dl, 15
 00000524  E8 00000000 E	    call Gotoxy
 00000529  BA 00000A7D R	    mov edx, offset instruc4
 0000052E  E8 00000000 E	    call WriteString
				    
 00000533  B6 09		    mov dh, 9
 00000535  B2 0F		    mov dl, 15
 00000537  E8 00000000 E	    call Gotoxy
 0000053C  BA 00000AA1 R	    mov edx, offset instruc5
 00000541  E8 00000000 E	    call WriteString
				    
 00000546  B6 0A		    mov dh, 10
 00000548  B2 0F		    mov dl, 15
 0000054A  E8 00000000 E	    call Gotoxy
 0000054F  BA 00000AC5 R	    mov edx, offset instruc6
 00000554  E8 00000000 E	    call WriteString
				    
 00000559  B6 0B		    mov dh, 11
 0000055B  B2 0F		    mov dl, 15
 0000055D  E8 00000000 E	    call Gotoxy
 00000562  BA 00000B09 R	    mov edx, offset instruc7
 00000567  E8 00000000 E	    call WriteString
				    
 0000056C  B6 0C		    mov dh, 12
 0000056E  B2 0F		    mov dl, 15
 00000570  E8 00000000 E	    call Gotoxy
 00000575  BA 00000B48 R	    mov edx, offset instruc8
 0000057A  E8 00000000 E	    call WriteString
				    
				    ; Get user choice
 0000057F  B8 0000000F		    mov eax, whiteTxt
 00000584  E8 00000000 E	    call SetTextColor
				    
 00000589  B6 0E		    mov dh, 14
 0000058B  B2 0F		    mov dl, 15
 0000058D  E8 00000000 E	    call Gotoxy
 00000592  BA 00000BDA R	    mov edx, offset instrucChoose
 00000597  E8 00000000 E	    call WriteString
				    
 0000059C  E8 00000000 E	    call ReadInt
				    
				    ; Process choice
 000005A1  3C 01		    cmp al, 1
 000005A3  74 04		    je ReturnToMenu
 000005A5  3C 02		    cmp al, 2
 000005A7  74 01		    je ExitGame
				    
 000005A9			ReturnToMenu:
 000005A9  C3			    ret
				    
 000005AA			ExitGame:
 000005AA  E8 00000000 E	    call Clrscr
				    exit
 000005AF  6A 00	   *	    push   +000000000h
 000005B1  E8 00000000 E   *	    call   ExitProcess
 000005B6			InstructionsScreen endp

				;-----------------------------------------------------
 000005B6			HighscoresScreen proc


 000005B6  E8 FFFFFA60		    call introSound

 000005BB  E8 00000000 E	    call Clrscr
				    

 000005C0  B8 0000000E		    mov eax, yellowTxt
 000005C5  E8 00000000 E	    call SetTextColor
				    
 000005CA  B6 05		    mov dh, 5
 000005CC  B2 14		    mov dl, 20
 000005CE  E8 00000000 E	    call Gotoxy
 000005D3  BA 00000C0C R	    mov edx, offset hsTitle0
 000005D8  E8 00000000 E	    call WriteString
				    
 000005DD  B6 06		    mov dh, 6
 000005DF  B2 14		    mov dl, 20
 000005E1  E8 00000000 E	    call Gotoxy
 000005E6  BA 00000C4A R	    mov edx, offset hsTitle1
 000005EB  E8 00000000 E	    call WriteString
				    
 000005F0  B6 07		    mov dh, 7
 000005F2  B2 14		    mov dl, 20
 000005F4  E8 00000000 E	    call Gotoxy
 000005F9  BA 00000C88 R	    mov edx, offset hsTitle2
 000005FE  E8 00000000 E	    call WriteString
				    
 00000603  B6 08		    mov dh, 8
 00000605  B2 14		    mov dl, 20
 00000607  E8 00000000 E	    call Gotoxy
 0000060C  BA 00000CC6 R	    mov edx, offset hsTitle3
 00000611  E8 00000000 E	    call WriteString
				    
 00000616  B6 09		    mov dh, 9
 00000618  B2 14		    mov dl, 20
 0000061A  E8 00000000 E	    call Gotoxy
 0000061F  BA 00000D04 R	    mov edx, offset hsTitle4
 00000624  E8 00000000 E	    call WriteString
				    
				    ; Here you would normally display the actual high scores
				    ; For now, just display a message
 00000629  B8 0000000F		    mov eax, whiteTxt
 0000062E  E8 00000000 E	    call SetTextColor
				    
 00000633  B6 0C		    mov dh, 12
 00000635  B2 1E		    mov dl, 30
 00000637  E8 00000000 E	    call Gotoxy
 0000063C  BA 00000BDA R	    mov edx, offset instrucChoose
 00000641  E8 00000000 E	    call WriteString
				    
 00000646  E8 00000000 E	    call ReadInt
				    
				    ; Any key returns to menu
 0000064B  C3			    ret
 0000064C			HighscoresScreen endp

				;***********************************************************

 0000064C			Level1Screen PROC
 0000064C  E8 00000000 E	    call Clrscr
 00000651  E8 FFFFF9E9		    call levelSound

				    ; Initialize game state
 00000656  C6 05 00000FC9 R	    mov pacmanX, 10
	   0A
 0000065D  C6 05 00000FCA R	    mov pacmanY, 15
	   0F
 00000664  C6 05 00000FD9 R	    mov oldPacmanX, 10     
	   0A
 0000066B  C6 05 00000FDA R	    mov oldPacmanY, 15
	   0F
 00000672  C6 05 00000FCB R	    mov ghostX, 50
	   32
 00000679  C6 05 00000FCC R	    mov ghostY, 15
	   0F
 00000680  C6 05 00000FDC R	    mov oldGhostX, 50
	   32
 00000687  C6 05 00000FDD R	    mov oldGhostY, 15
	   0F
 0000068E  C7 05 00000FCD R	    mov score, 0
	   00000000
 00000698  C6 05 00000FA0 R	    mov pelletCount, 20
	   14

 0000069F  E8 0000026D		    call InitializePellets
 000006A4  E8 00000125		    call DrawStaticElements

 000006A9			GameLoop:
				    ; Clear old Pac-Man position
 000006A9  B8 00000000		    mov eax, blackTxt
 000006AE  E8 00000000 E	    call SetTextColor
 000006B3  8A 15 00000FD9 R	    mov dl, oldPacmanX
 000006B9  8A 35 00000FDA R	    mov dh, oldPacmanY
 000006BF  E8 00000000 E	    call Gotoxy
 000006C4  A0 00000F99 R	    mov al, emptyChar
 000006C9  E8 00000000 E	    call WriteChar

				    ; Draw dynamic elements
 000006CE  E8 000001CB		    call DrawGameElements

				    ; Handle input
 000006D3  E8 00000000 E	    call ReadKey
 000006D8  0F 84 000000D8	    jz NoInput

 000006DE  3C 77		    cmp al, 'w'
 000006E0  74 1D		    je MoveUp
 000006E2  3C 61		    cmp al, 'a'
 000006E4  74 4A		    je MoveLeft
 000006E6  3C 73		    cmp al, 's'
 000006E8  74 71		    je MoveDown
 000006EA  3C 64		    cmp al, 'd'
 000006EC  0F 84 00000094	    je MoveRight
 000006F2  3C 31		    cmp al, '1'    ; Return to menu
 000006F4  0F 84 000000D3	    je ExitLevel
 000006FA  E9 000000B7		    jmp NoInput

 000006FF			MoveUp:
				    ; Save current position as old position
 000006FF  A0 00000FC9 R	    mov al, pacmanX
 00000704  A2 00000FD9 R	    mov oldPacmanX, al
 00000709  A0 00000FCA R	    mov al, pacmanY
 0000070E  A2 00000FDA R	    mov oldPacmanY, al
				    
 00000713  FE 0D 00000FCA R	    dec pacmanY
 00000719  E8 000002F6		    call CheckWallCollision
 0000071E  72 05		    jc CancelMoveUp
 00000720  E9 0000008C		    jmp AfterMove
 00000725			CancelMoveUp:
 00000725  FE 05 00000FCA R	    inc pacmanY
 0000072B  E9 00000081		    jmp AfterMove

 00000730			MoveLeft:
				    ; Save current position as old position
 00000730  A0 00000FC9 R	    mov al, pacmanX
 00000735  A2 00000FD9 R	    mov oldPacmanX, al
 0000073A  A0 00000FCA R	    mov al, pacmanY
 0000073F  A2 00000FDA R	    mov oldPacmanY, al
				    
 00000744  FE 0D 00000FC9 R	    dec pacmanX
 0000074A  E8 000002C5		    call CheckWallCollision
 0000074F  72 02		    jc CancelMoveLeft
 00000751  EB 5E		    jmp AfterMove
 00000753			CancelMoveLeft:
 00000753  FE 05 00000FC9 R	    inc pacmanX
 00000759  EB 56		    jmp AfterMove

 0000075B			MoveDown:
				    ; Save current position as old position
 0000075B  A0 00000FC9 R	    mov al, pacmanX
 00000760  A2 00000FD9 R	    mov oldPacmanX, al
 00000765  A0 00000FCA R	    mov al, pacmanY
 0000076A  A2 00000FDA R	    mov oldPacmanY, al
				    
 0000076F  FE 05 00000FCA R	    inc pacmanY
 00000775  E8 0000029A		    call CheckWallCollision
 0000077A  72 02		    jc CancelMoveDown
 0000077C  EB 33		    jmp AfterMove
 0000077E			CancelMoveDown:
 0000077E  FE 0D 00000FCA R	    dec pacmanY
 00000784  EB 2B		    jmp AfterMove

 00000786			MoveRight:
				    ; Save current position as old position
 00000786  A0 00000FC9 R	    mov al, pacmanX
 0000078B  A2 00000FD9 R	    mov oldPacmanX, al
 00000790  A0 00000FCA R	    mov al, pacmanY
 00000795  A2 00000FDA R	    mov oldPacmanY, al
				    
 0000079A  FE 05 00000FC9 R	    inc pacmanX
 000007A0  E8 0000026F		    call CheckWallCollision
 000007A5  72 02		    jc CancelMoveRight
 000007A7  EB 08		    jmp AfterMove
 000007A9			CancelMoveRight:
 000007A9  FE 0D 00000FC9 R	    dec pacmanX
 000007AF  EB 00		    jmp AfterMove

 000007B1			AfterMove:
				    ; Check pellet collisions
 000007B1  E8 00000270		    call CheckPelletCollision

 000007B6			NoInput:
				    ; Small delay
 000007B6  B8 00000064		    mov eax, 100
 000007BB  E8 00000000 E	    call Delay

				    ; Check if all pellets collected
 000007C0  80 3D 00000FA0 R	    cmp pelletCount, 0
	   00
 000007C7  0F 85 FFFFFEDC	    jne GameLoop

 000007CD			ExitLevel:
 000007CD  C3			    ret
 000007CE			Level1Screen ENDP
				;;...........................................
 000007CE			DrawStaticElements PROC
				    ; Draw info bar
 000007CE  B8 0000000F		    mov eax, whiteTxt
 000007D3  E8 00000000 E	    call SetTextColor
				    
 000007D8  B6 00		    mov dh, 0
 000007DA  B2 00		    mov dl, 0
 000007DC  E8 00000000 E	    call Gotoxy
 000007E1  BA 00000F88 R	    mov edx, OFFSET livesMsg
 000007E6  E8 00000000 E	    call WriteString
 000007EB  A1 00000FD1 R	    mov eax, lives
 000007F0  E8 00000000 E	    call WriteDec

 000007F5  B6 01		    mov dh, 1
 000007F7  B2 00		    mov dl, 0
 000007F9  E8 00000000 E	    call Gotoxy
 000007FE  BA 000000A7 R	    mov edx, OFFSET userName
 00000803  E8 00000000 E	    call WriteString

 00000808  B6 02		    mov dh,2
 0000080A  B2 4B		    mov dl, 75
 0000080C  E8 00000000 E	    call Gotoxy
 00000811  BA 00000F90 R	    mov edx, OFFSET levelMsg
 00000816  E8 00000000 E	    call WriteString
 0000081B  A1 00000FD5 R	    mov eax, level
 00000820  E8 00000000 E	    call WriteDec

				    ; Draw borders and walls (your existing code)
				    ; Top border
 00000825  B6 05		    mov dh, 5
 00000827  B2 00		    mov dl, 0
 00000829  B9 00000073		    mov ecx, 115
 0000082E  A0 00000F98 R	    mov al, wallChar
 00000833			topBorder:
 00000833  E8 00000000 E	    call Gotoxy
 00000838  E8 00000000 E	    call WriteChar
 0000083D  FE C2		    inc dl
 0000083F  E2 F2		    loop topBorder

				    ; Bottom border
 00000841  B6 1D		    mov dh, 29
 00000843  B2 00		    mov dl, 0
 00000845  B9 00000073		    mov ecx, 115
 0000084A			bottomBorder:
 0000084A  E8 00000000 E	    call Gotoxy
 0000084F  E8 00000000 E	    call WriteChar
 00000854  FE C2		    inc dl
 00000856  E2 F2		    loop bottomBorder

				    ; Left and right borders 
 00000858  B6 05		    mov dh, 5
 0000085A  B9 0000001B		    mov ecx, 27        ; Height
 0000085F			sideBorders:
				    ; Left border
 0000085F  B2 00		    mov dl, 0
 00000861  E8 00000000 E	    call Gotoxy
 00000866  A0 00000F98 R	    mov al, wallChar
 0000086B  E8 00000000 E	    call WriteChar
				    ; Right border
 00000870  B2 72		    mov dl, 114
 00000872  E8 00000000 E	    call Gotoxy
 00000877  A0 00000F98 R	    mov al, wallChar
 0000087C  E8 00000000 E	    call WriteChar
 00000881  FE C6		    inc dh
 00000883  E2 DA		    loop sideBorders

				    ; Inner walls (your existing code)
 00000885  E8 000001FE		    call DrawInnerWalls

				    ; Return message
 0000088A  B6 03		    mov dh, 3
 0000088C  B2 02		    mov dl, 2
 0000088E  E8 00000000 E	    call Gotoxy
 00000893  BA 000000D9 R	    mov edx, offset returnMsg
 00000898  E8 00000000 E	    call WriteString
				    
 0000089D  C3			    ret
 0000089E			DrawStaticElements ENDP
				;;...........................................
 0000089E			DrawGameElements PROC
				    ; Draw pellets
 0000089E  B8 00000005		    mov eax, purpleTxt
 000008A3  E8 00000000 E	    call SetTextColor
 000008A8  BE 00000FA1 R	    mov esi, OFFSET pelletPositions
 000008AD  B9 00000014		    mov ecx, 20

 000008B2			DrawPellets:
 000008B2  80 3E 00		    cmp byte ptr [esi], 0  ; Skip if pellet collected
 000008B5  74 14		    je SkipPellet
				    
 000008B7  8A 16		    mov dl, [esi]    ; X
 000008B9  8A 76 01		    mov dh, [esi+1]  ; Y
 000008BC  E8 00000000 E	    call Gotoxy
 000008C1  A0 00000F9A R	    mov al, pelletChar
 000008C6  E8 00000000 E	    call WriteChar

 000008CB			SkipPellet:
 000008CB  83 C6 02		    add esi, 2
 000008CE  E2 E2		    loop DrawPellets

				    ; Draw Pac-Man
 000008D0  B8 0000000F		    mov eax, whiteTxt
 000008D5  E8 00000000 E	    call SetTextColor
 000008DA  8A 15 00000FC9 R	    mov dl, pacmanX
 000008E0  8A 35 00000FCA R	    mov dh, pacmanY
 000008E6  E8 00000000 E	    call Gotoxy
 000008EB  A0 00000F9C R	    mov al, pacmanChar
 000008F0  E8 00000000 E	    call WriteChar

				    ; Draw Ghost
 000008F5  8A 15 00000FCB R	    mov dl, ghostX
 000008FB  8A 35 00000FCC R	    mov dh, ghostY
 00000901  E8 00000000 E	    call Gotoxy
 00000906  A0 00000F9E R	    mov al, ghostChar
 0000090B  E8 00000000 E	    call WriteChar

 00000910  C3			    ret
 00000911			DrawGameElements ENDP
				;...........................................
 00000911			InitializePellets PROC
 00000911  60			    pushad
 00000912  B9 00000014		    mov ecx, 20
 00000917  BE 00000FA1 R	    mov esi, OFFSET pelletPositions

 0000091C			PlacePellet:
				    ; Generate random position within play area
 0000091C  B8 00000071		    mov eax, 113    
 00000921  E8 00000000 E	    call RandomRange
 00000926  40			    inc eax          ; X = 1-114
 00000927  88 06		    mov [esi], al    ; Store X
				    
 00000929  B8 00000017		    mov eax, 23      ; Max Y (29-6)
 0000092E  E8 00000000 E	    call RandomRange
 00000933  83 C0 06		    add eax, 6       ; Y = 6-29
 00000936  88 46 01		    mov [esi+1], al  ; Store Y

				    ; Check if position is valid (not on wall)
 00000939  8A 16		    mov dl, [esi]
 0000093B  8A 76 01		    mov dh, [esi+1]
 0000093E  E8 00000009		    call CheckWallPosition
 00000943  72 D7		    jc PlacePellet  ; If invalid, try again

 00000945  83 C6 02		    add esi, 2
 00000948  E2 D2		    loop PlacePellet

 0000094A  61			    popad
 0000094B  C3			    ret
 0000094C			InitializePellets ENDP
				;..........................................
 0000094C			CheckWallPosition PROC
				    ; Checks if position (dl=X, dh=Y) is a wall
				    ; Returns CF=1 if wall, CF=0 if empty
				    
				    ; Check borders
 0000094C  80 FA 00		    cmp dl, 0
 0000094F  0F 84 000000BD	    je IsWall
 00000955  80 FA 72		    cmp dl, 114
 00000958  0F 84 000000B4	    je IsWall
 0000095E  80 FE 05		    cmp dh, 5
 00000961  0F 84 000000AB	    je IsWall
 00000967  80 FE 1D		    cmp dh, 29
 0000096A  0F 84 000000A2	    je IsWall

				    ; Check inner walls (based on your DrawInnerWalls)
				    
				    ; Horizontal wall at Y=10, X=20-34
 00000970  80 FE 0A		    cmp dh, 10
 00000973  75 0F		    jne NotWall1
 00000975  80 FA 14		    cmp dl, 20
 00000978  72 0A		    jb NotWall1
 0000097A  80 FA 22		    cmp dl, 34
 0000097D  77 05		    ja NotWall1
 0000097F  E9 0000008E		    jmp IsWall

 00000984			NotWall1:
				    ; Horizontal wall at Y=10, X=70-84
 00000984  80 FE 0A		    cmp dh, 10
 00000987  75 0C		    jne NotWall2
 00000989  80 FA 46		    cmp dl, 70
 0000098C  72 07		    jb NotWall2
 0000098E  80 FA 54		    cmp dl, 84
 00000991  77 02		    ja NotWall2
 00000993  EB 7D		    jmp IsWall

 00000995			NotWall2:
				    ; Horizontal walls at Y=14
 00000995  80 FE 0E		    cmp dh, 14
 00000998  75 3C		    jne NotWall3
				    ; X=15-22
 0000099A  80 FA 0F		    cmp dl, 15
 0000099D  72 07		    jb NotWall3a
 0000099F  80 FA 16		    cmp dl, 22
 000009A2  77 02		    ja NotWall3a
 000009A4  EB 6C		    jmp IsWall
 000009A6			NotWall3a:
				    ; X=35-42
 000009A6  80 FA 23		    cmp dl, 35
 000009A9  72 07		    jb NotWall3b
 000009AB  80 FA 2A		    cmp dl, 42
 000009AE  77 02		    ja NotWall3b
 000009B0  EB 60		    jmp IsWall
 000009B2			NotWall3b:
				    ; X=55-62
 000009B2  80 FA 37		    cmp dl, 55
 000009B5  72 07		    jb NotWall3c
 000009B7  80 FA 3E		    cmp dl, 62
 000009BA  77 02		    ja NotWall3c
 000009BC  EB 54		    jmp IsWall
 000009BE			NotWall3c:
				    ; X=75-82
 000009BE  80 FA 4B		    cmp dl, 75
 000009C1  72 07		    jb NotWall3d
 000009C3  80 FA 52		    cmp dl, 82
 000009C6  77 02		    ja NotWall3d
 000009C8  EB 48		    jmp IsWall
 000009CA			NotWall3d:
				    ; X=95-102
 000009CA  80 FA 5F		    cmp dl, 95
 000009CD  72 07		    jb NotWall3
 000009CF  80 FA 66		    cmp dl, 102
 000009D2  77 02		    ja NotWall3
 000009D4  EB 3C		    jmp IsWall

 000009D6			NotWall3:
				    ; Horizontal walls at Y=17
 000009D6  80 FE 11		    cmp dh, 17
 000009D9  75 18		    jne NotWall4
				    ; X=30-39
 000009DB  80 FA 1E		    cmp dl, 30
 000009DE  72 07		    jb NotWall4a
 000009E0  80 FA 27		    cmp dl, 39
 000009E3  77 02		    ja NotWall4a
 000009E5  EB 2B		    jmp IsWall
 000009E7			NotWall4a:
				    ; X=80-89
 000009E7  80 FA 50		    cmp dl, 80
 000009EA  72 07		    jb NotWall4
 000009EC  80 FA 59		    cmp dl, 89
 000009EF  77 02		    ja NotWall4
 000009F1  EB 1F		    jmp IsWall

 000009F3			NotWall4:
				    ; Horizontal walls at Y=22
 000009F3  80 FE 16		    cmp dh, 22
 000009F6  75 18		    jne NotWall
				    ; X=25-44
 000009F8  80 FA 19		    cmp dl, 25
 000009FB  72 07		    jb NotWall5a
 000009FD  80 FA 2C		    cmp dl, 44
 00000A00  77 02		    ja NotWall5a
 00000A02  EB 0E		    jmp IsWall
 00000A04			NotWall5a:
				    ; X=85-104
 00000A04  80 FA 55		    cmp dl, 85
 00000A07  72 07		    jb NotWall
 00000A09  80 FA 68		    cmp dl, 104
 00000A0C  77 02		    ja NotWall
 00000A0E  EB 02		    jmp IsWall

 00000A10			NotWall:
 00000A10  F8			    clc
 00000A11  C3			    ret
 00000A12			IsWall:
 00000A12  F9			    stc
 00000A13  C3			    ret
 00000A14			CheckWallPosition ENDP
				;...........................................
 00000A14			CheckWallCollision PROC
				    ; Checks if Pac-Man's current position is a wall
				    ; Returns CF=1 if collision
 00000A14  8A 15 00000FC9 R	    mov dl, pacmanX
 00000A1A  8A 35 00000FCA R	    mov dh, pacmanY
 00000A20  E8 FFFFFF27		    call CheckWallPosition
 00000A25  C3			    ret
 00000A26			CheckWallCollision ENDP
				;.........................................
 00000A26			CheckPelletCollision PROC
 00000A26  60			    pushad
 00000A27  BE 00000FA1 R	    mov esi, OFFSET pelletPositions
 00000A2C  B9 00000014		    mov ecx, 20

 00000A31			CheckPellets:
 00000A31  80 3E 00		    cmp byte ptr [esi], 0  ; Skip if pellet already collected
 00000A34  74 4B		    je NextPellet
				    
 00000A36  8A 06		    mov al, [esi]    ; Pellet X
 00000A38  3A 05 00000FC9 R	    cmp al, pacmanX
 00000A3E  75 41		    jne NextPellet
				    
 00000A40  8A 46 01		    mov al, [esi+1]  ; Pellet Y
 00000A43  3A 05 00000FCA R	    cmp al, pacmanY
 00000A49  75 36		    jne NextPellet

				    ; Pac-Man is on this pellet!
 00000A4B  C6 06 00		    mov byte ptr [esi], 0  ; Remove pellet
 00000A4E  FF 05 00000FCD R	    inc score
 00000A54  FE 0D 00000FA0 R	    dec pelletCount

				    ; Update score display
 00000A5A  B8 0000000F		    mov eax, whiteTxt
 00000A5F  E8 00000000 E	    call SetTextColor
 00000A64  B6 01		    mov dh, 1
 00000A66  B2 37		    mov dl, 55
 00000A68  E8 00000000 E	    call Gotoxy
 00000A6D  BA 00000F80 R	    mov edx, OFFSET scoreMsg
 00000A72  E8 00000000 E	    call WriteString
 00000A77  A1 00000FCD R	    mov eax, score
 00000A7C  E8 00000000 E	    call WriteDec

 00000A81			NextPellet:
 00000A81  83 C6 02		    add esi, 2
 00000A84  E2 AB		    loop CheckPellets

 00000A86  61			    popad
 00000A87  C3			    ret
 00000A88			CheckPelletCollision ENDP

				;.....................................
 00000A88			DrawInnerWalls PROC
 00000A88  B6 0A		    mov dh, 10
 00000A8A  B2 14		    mov dl, 20
 00000A8C  B9 0000000F		    mov ecx, 15
 00000A91  E8 00000061		    call DrawWall
 00000A96  B2 46		    mov dl, 70
 00000A98  B9 0000000F		    mov ecx, 15
 00000A9D  E8 00000055		    call DrawWall

 00000AA2  B6 0E		    mov dh, 14
 00000AA4  B2 0F		    mov dl, 15
 00000AA6  B9 00000008		    mov ecx, 8
 00000AAB  E8 00000047		    call DrawWall
 00000AB0  B2 23		    mov dl, 35
 00000AB2  E8 00000040		    call DrawWall
 00000AB7  B2 37		    mov dl, 55
 00000AB9  E8 00000039		    call DrawWall
 00000ABE  B2 4B		    mov dl, 75
 00000AC0  E8 00000032		    call DrawWall
 00000AC5  B2 5F		    mov dl, 95
 00000AC7  E8 0000002B		    call DrawWall

 00000ACC  B6 11		    mov dh, 17
 00000ACE  B2 1E		    mov dl, 30
 00000AD0  B9 0000000A		    mov ecx, 10
 00000AD5  E8 0000001D		    call DrawWall
 00000ADA  B2 50		    mov dl, 80
 00000ADC  E8 00000016		    call DrawWall

 00000AE1  B6 16		    mov dh, 22
 00000AE3  B2 19		    mov dl, 25
 00000AE5  B9 00000014		    mov ecx, 20
 00000AEA  E8 00000008		    call DrawWall
 00000AEF  B2 55		    mov dl, 85
 00000AF1  E8 00000001		    call DrawWall
 00000AF6  C3			    ret
 00000AF7			DrawInnerWalls ENDP
				;.................................................
 00000AF7			DrawWall PROC
 00000AF7  51			    push ecx
 00000AF8			wallLoop:
 00000AF8  E8 00000000 E	    call Gotoxy
 00000AFD  A0 00000F98 R	    mov al, wallChar
 00000B02  E8 00000000 E	    call WriteChar
 00000B07  FE C2		    inc dl
 00000B09  E2 ED		    loop wallLoop
 00000B0B  59			    pop ecx
 00000B0C  C3			    ret
 00000B0D			DrawWall ENDP
				;........................................


 00000B0D			Level2Screen proc
 00000B0D			Level2Screen endp

 00000B0D			Level3Screen proc
 00000B0D			Level3Screen endp

				end main




Microsoft (R) Macro Assembler Version 14.42.34436.0	    05/12/25 01:24:51
CODE.asm						     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000FDE Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000B0D Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CheckPelletCollision . . . . . .	P Near	 00000A26 _TEXT	Length= 00000062 Public STDCALL
  CheckPellets . . . . . . . . .	L Near	 00000A31 _TEXT	
  NextPellet . . . . . . . . . .	L Near	 00000A81 _TEXT	
CheckWallCollision . . . . . . .	P Near	 00000A14 _TEXT	Length= 00000012 Public STDCALL
CheckWallPosition  . . . . . . .	P Near	 0000094C _TEXT	Length= 000000C8 Public STDCALL
  NotWall1 . . . . . . . . . . .	L Near	 00000984 _TEXT	
  NotWall2 . . . . . . . . . . .	L Near	 00000995 _TEXT	
  NotWall3a  . . . . . . . . . .	L Near	 000009A6 _TEXT	
  NotWall3b  . . . . . . . . . .	L Near	 000009B2 _TEXT	
  NotWall3c  . . . . . . . . . .	L Near	 000009BE _TEXT	
  NotWall3d  . . . . . . . . . .	L Near	 000009CA _TEXT	
  NotWall3 . . . . . . . . . . .	L Near	 000009D6 _TEXT	
  NotWall4a  . . . . . . . . . .	L Near	 000009E7 _TEXT	
  NotWall4 . . . . . . . . . . .	L Near	 000009F3 _TEXT	
  NotWall5a  . . . . . . . . . .	L Near	 00000A04 _TEXT	
  NotWall  . . . . . . . . . . .	L Near	 00000A10 _TEXT	
  IsWall . . . . . . . . . . . .	L Near	 00000A12 _TEXT	
CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DrawGameElements . . . . . . . .	P Near	 0000089E _TEXT	Length= 00000073 Public STDCALL
  DrawPellets  . . . . . . . . .	L Near	 000008B2 _TEXT	
  SkipPellet . . . . . . . . . .	L Near	 000008CB _TEXT	
DrawInnerWalls . . . . . . . . .	P Near	 00000A88 _TEXT	Length= 0000006F Public STDCALL
DrawStaticElements . . . . . . .	P Near	 000007CE _TEXT	Length= 000000D0 Public STDCALL
  topBorder  . . . . . . . . . .	L Near	 00000833 _TEXT	
  bottomBorder . . . . . . . . .	L Near	 0000084A _TEXT	
  sideBorders  . . . . . . . . .	L Near	 0000085F _TEXT	
DrawWall . . . . . . . . . . . .	P Near	 00000AF7 _TEXT	Length= 00000016 Public STDCALL
  wallLoop . . . . . . . . . . .	L Near	 00000AF8 _TEXT	
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HighscoresScreen . . . . . . . .	P Near	 000005B6 _TEXT	Length= 00000096 Public STDCALL
InitializePellets  . . . . . . .	P Near	 00000911 _TEXT	Length= 0000003B Public STDCALL
  PlacePellet  . . . . . . . . .	L Near	 0000091C _TEXT	
InstructionsScreen . . . . . . .	P Near	 000004DC _TEXT	Length= 000000DA Public STDCALL
  ReturnToMenu . . . . . . . . .	L Near	 000005A9 _TEXT	
  ExitGame . . . . . . . . . . .	L Near	 000005AA _TEXT	
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Level1Screen . . . . . . . . . .	P Near	 0000064C _TEXT	Length= 00000182 Public STDCALL
  GameLoop . . . . . . . . . . .	L Near	 000006A9 _TEXT	
  MoveUp . . . . . . . . . . . .	L Near	 000006FF _TEXT	
  CancelMoveUp . . . . . . . . .	L Near	 00000725 _TEXT	
  MoveLeft . . . . . . . . . . .	L Near	 00000730 _TEXT	
  CancelMoveLeft . . . . . . . .	L Near	 00000753 _TEXT	
  MoveDown . . . . . . . . . . .	L Near	 0000075B _TEXT	
  CancelMoveDown . . . . . . . .	L Near	 0000077E _TEXT	
  MoveRight  . . . . . . . . . .	L Near	 00000786 _TEXT	
  CancelMoveRight  . . . . . . .	L Near	 000007A9 _TEXT	
  AfterMove  . . . . . . . . . .	L Near	 000007B1 _TEXT	
  NoInput  . . . . . . . . . . .	L Near	 000007B6 _TEXT	
  ExitLevel  . . . . . . . . . .	L Near	 000007CD _TEXT	
Level2Screen . . . . . . . . . .	P Near	 00000B0D _TEXT	Length= 00000000 Public STDCALL
Level3Screen . . . . . . . . . .	P Near	 00000B0D _TEXT	Length= 00000000 Public STDCALL
LevelSelectScreen  . . . . . . .	P Near	 00000318 _TEXT	Length= 000001C4 Public STDCALL
  StartLevel1  . . . . . . . . .	L Near	 000004AA _TEXT	
  StartLevel2  . . . . . . . . .	L Near	 000004B7 _TEXT	
  StartLevel3  . . . . . . . . .	L Near	 000004C3 _TEXT	
  ReturnToMenu . . . . . . . . .	L Near	 000004CF _TEXT	
  ExitGame . . . . . . . . . . .	L Near	 000004D0 _TEXT	
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MenuScreen . . . . . . . . . . .	P Near	 0000019C _TEXT	Length= 0000017C Public STDCALL
  LevelSelection . . . . . . . .	L Near	 000002EE _TEXT	
  ShowInstructions . . . . . . .	L Near	 000002F8 _TEXT	
  ShowHighscores . . . . . . . .	L Near	 00000302 _TEXT	
  ExitGame . . . . . . . . . . .	L Near	 0000030C _TEXT	
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PlaySound  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WelcomeScreen  . . . . . . . . .	P Near	 00000063 _TEXT	Length= 00000139 Public STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
introSound . . . . . . . . . . .	P Near	 0000001B _TEXT	Length= 00000024 Public STDCALL
  no_error1  . . . . . . . . . .	L Near	 0000003C _TEXT	
levelSound . . . . . . . . . . .	P Near	 0000003F _TEXT	Length= 00000024 Public STDCALL
  no_error2  . . . . . . . . . .	L Near	 00000060 _TEXT	
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 0000001B Public STDCALL
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GAME_WIDTH . . . . . . . . . . .	Number	 00000050h   
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INFO_START . . . . . . . . . . .	Number	 0000005Ah   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PacmanIntro  . . . . . . . . . .	Byte	 00000028 _DATA	
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
SND_ASYNC  . . . . . . . . . . .	Number	 00000001h   
SND_FILENAME . . . . . . . . . .	Number	 00020000h   
SND_SYNC . . . . . . . . . . . .	Number	 00000000h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
SoundError . . . . . . . . . . .	Byte	 0000005C _DATA	
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
blackTxt . . . . . . . . . . . .	Number	 00000000h   
black  . . . . . . . . . . . . .	Number	 00000000h   
blueTxt  . . . . . . . . . . . .	Number	 00000001h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
currentLevel . . . . . . . . . .	Byte	 00000F76 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
emptyChar  . . . . . . . . . . .	Byte	 00000F99 _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
fileName . . . . . . . . . . . .	Byte	 00000088 _DATA	
gameOverMsg1 . . . . . . . . . .	Byte	 00000D90 _DATA	
gameOverMsg2 . . . . . . . . . .	Byte	 00000DC4 _DATA	
gameOverMsg3 . . . . . . . . . .	Byte	 00000DF7 _DATA	
gameOverMsg4 . . . . . . . . . .	Byte	 00000E2B _DATA	
gameOverMsg5 . . . . . . . . . .	Byte	 00000E5F _DATA	
gamePause1 . . . . . . . . . . .	Byte	 00000D42 _DATA	
gamePause2 . . . . . . . . . . .	Byte	 00000D54 _DATA	
gamePause3 . . . . . . . . . . .	Byte	 00000D69 _DATA	
gamePause4 . . . . . . . . . . .	Byte	 00000D7D _DATA	
ghostChar  . . . . . . . . . . .	Byte	 00000F9E _DATA	
ghostDir . . . . . . . . . . . .	Byte	 00000FDB _DATA	
ghostX . . . . . . . . . . . . .	Byte	 00000FCB _DATA	
ghostY . . . . . . . . . . . . .	Byte	 00000FCC _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
greenTxt . . . . . . . . . . . .	Number	 00000002h   
green  . . . . . . . . . . . . .	Number	 00000002h   
hsTitle0 . . . . . . . . . . . .	Byte	 00000C0C _DATA	
hsTitle1 . . . . . . . . . . . .	Byte	 00000C4A _DATA	
hsTitle2 . . . . . . . . . . . .	Byte	 00000C88 _DATA	
hsTitle3 . . . . . . . . . . . .	Byte	 00000CC6 _DATA	
hsTitle4 . . . . . . . . . . . .	Byte	 00000D04 _DATA	
inputName  . . . . . . . . . . .	Byte	 00000092 _DATA	
instruc1 . . . . . . . . . . . .	Byte	 000009A9 _DATA	
instruc2 . . . . . . . . . . . .	Byte	 000009ED _DATA	
instruc3 . . . . . . . . . . . .	Byte	 00000A35 _DATA	
instruc4 . . . . . . . . . . . .	Byte	 00000A7D _DATA	
instruc5 . . . . . . . . . . . .	Byte	 00000AA1 _DATA	
instruc6 . . . . . . . . . . . .	Byte	 00000AC5 _DATA	
instruc7 . . . . . . . . . . . .	Byte	 00000B09 _DATA	
instruc8 . . . . . . . . . . . .	Byte	 00000B48 _DATA	
instruc9 . . . . . . . . . . . .	Byte	 00000B91 _DATA	
instrucChoose  . . . . . . . . .	Byte	 00000BDA _DATA	
level1opt0 . . . . . . . . . . .	Byte	 0000067A _DATA	
level1opt1 . . . . . . . . . . .	Byte	 000006A9 _DATA	
level1opt2 . . . . . . . . . . .	Byte	 000006D8 _DATA	
level1opt3 . . . . . . . . . . .	Byte	 00000707 _DATA	
level1opt4 . . . . . . . . . . .	Byte	 00000736 _DATA	
level2opt0 . . . . . . . . . . .	Byte	 00000765 _DATA	
level2opt1 . . . . . . . . . . .	Byte	 00000794 _DATA	
level2opt2 . . . . . . . . . . .	Byte	 000007C3 _DATA	
level2opt3 . . . . . . . . . . .	Byte	 000007F2 _DATA	
level2opt4 . . . . . . . . . . .	Byte	 00000821 _DATA	
level3opt0 . . . . . . . . . . .	Byte	 00000850 _DATA	
level3opt1 . . . . . . . . . . .	Byte	 0000087F _DATA	
level3opt2 . . . . . . . . . . .	Byte	 000008AE _DATA	
level3opt3 . . . . . . . . . . .	Byte	 000008DD _DATA	
level3opt4 . . . . . . . . . . .	Byte	 0000090C _DATA	
levelCompleteMsg1  . . . . . . .	Byte	 00000EC0 _DATA	
levelCompleteMsg2  . . . . . . .	Byte	 00000EDE _DATA	
levelCompleteMsg3  . . . . . . .	Byte	 00000EFC _DATA	
levelCompleteMsg4  . . . . . . .	Byte	 00000F1A _DATA	
levelCompleteMsg5  . . . . . . .	Byte	 00000F38 _DATA	
levelCompleteMsg6  . . . . . . .	Byte	 00000F56 _DATA	
levelMsg . . . . . . . . . . . .	Byte	 00000F90 _DATA	
leveloptchoose1  . . . . . . . .	Byte	 0000093B _DATA	
leveloptchoose2  . . . . . . . .	Byte	 00000974 _DATA	
level  . . . . . . . . . . . . .	DWord	 00000FD5 _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
livesMsg . . . . . . . . . . . .	Byte	 00000F88 _DATA	
lives  . . . . . . . . . . . . .	DWord	 00000FD1 _DATA	
magenta  . . . . . . . . . . . .	Number	 00000005h   
menuopt0 . . . . . . . . . . . .	Byte	 00000599 _DATA	
menuopt1 . . . . . . . . . . . .	Byte	 000005BB _DATA	
menuopt2 . . . . . . . . . . . .	Byte	 000005DD _DATA	
menuopt3 . . . . . . . . . . . .	Byte	 000005FF _DATA	
menuopt4 . . . . . . . . . . . .	Byte	 00000621 _DATA	
menuopt5 . . . . . . . . . . . .	Byte	 00000643 _DATA	
menuoptchoose  . . . . . . . . .	Byte	 00000665 _DATA	
menutitle0 . . . . . . . . . . .	Byte	 00000481 _DATA	
menutitle1 . . . . . . . . . . .	Byte	 000004B0 _DATA	
menutitle2 . . . . . . . . . . .	Byte	 000004DF _DATA	
menutitle3 . . . . . . . . . . .	Byte	 0000050D _DATA	
menutitle4 . . . . . . . . . . .	Byte	 0000053C _DATA	
menutitle5 . . . . . . . . . . .	Byte	 0000056A _DATA	
midSound . . . . . . . . . . . .	Byte	 00000000 _DATA	
oldGhostX  . . . . . . . . . . .	Byte	 00000FDC _DATA	
oldGhostY  . . . . . . . . . . .	Byte	 00000FDD _DATA	
oldPacmanX . . . . . . . . . . .	Byte	 00000FD9 _DATA	
oldPacmanY . . . . . . . . . . .	Byte	 00000FDA _DATA	
pacmanChar . . . . . . . . . . .	Byte	 00000F9C _DATA	
pacmanX  . . . . . . . . . . . .	Byte	 00000FC9 _DATA	
pacmanY  . . . . . . . . . . . .	Byte	 00000FCA _DATA	
pelletChar . . . . . . . . . . .	Byte	 00000F9A _DATA	
pelletCount  . . . . . . . . . .	Byte	 00000FA0 _DATA	
pelletPositions  . . . . . . . .	Byte	 00000FA1 _DATA	
playerName . . . . . . . . . . .	Byte	 00000F77 _DATA	
pmtitle10  . . . . . . . . . . .	Byte	 000003DD _DATA	
pmtitle11  . . . . . . . . . . .	Byte	 0000042F _DATA	
pmtitle1 . . . . . . . . . . . .	Byte	 000000FB _DATA	
pmtitle2 . . . . . . . . . . . .	Byte	 0000014D _DATA	
pmtitle3 . . . . . . . . . . . .	Byte	 0000019F _DATA	
pmtitle4 . . . . . . . . . . . .	Byte	 000001F1 _DATA	
pmtitle5 . . . . . . . . . . . .	Byte	 00000243 _DATA	
pmtitle6 . . . . . . . . . . . .	Byte	 00000295 _DATA	
pmtitle7 . . . . . . . . . . . .	Byte	 000002E7 _DATA	
pmtitle8 . . . . . . . . . . . .	Byte	 00000339 _DATA	
pmtitle9 . . . . . . . . . . . .	Byte	 0000038B _DATA	
purpleTxt  . . . . . . . . . . .	Number	 00000005h   
redTxt . . . . . . . . . . . . .	Number	 00000004h   
red  . . . . . . . . . . . . . .	Number	 00000004h   
returnMsg  . . . . . . . . . . .	Byte	 000000D9 _DATA	
returnOption . . . . . . . . . .	Byte	 00000EA6 _DATA	
scoreDisplay . . . . . . . . . .	Byte	 00000E93 _DATA	
scoreMsg . . . . . . . . . . . .	Byte	 00000F80 _DATA	
score  . . . . . . . . . . . . .	DWord	 00000FCD _DATA	
temp . . . . . . . . . . . . . .	Byte	 00000F75 _DATA	
userChoice . . . . . . . . . . .	Byte	 00000F74 _DATA	
username . . . . . . . . . . . .	Byte	 000000A7 _DATA	
wallChar . . . . . . . . . . . .	Byte	 00000F98 _DATA	
whiteTxt . . . . . . . . . . . .	Number	 0000000Fh   
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellowTxt  . . . . . . . . . . .	Number	 0000000Eh   
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
